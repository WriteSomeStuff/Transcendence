services:
  auth_service:
    container_name: authentication
    restart: always
    build: ./backend/authentication
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 8081:8080
    volumes:
      - auth_db:/app/data/database
    networks:
      - internal
    environment:
      - NODE_ENV=development
      - USER_SERVICE_URL=http://user_service:8080/users
    env_file:
      - .env

  user_service:
    container_name: user_management
    restart: always
    build: ./backend/userManagement
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/users/health"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 8082:8080
    volumes:
      - user_db:/app/data/database
      - user_avatars:/app/data/avatars
    networks:
      - internal
    environment:
      - AUTH_SERVICE_URL=http://auth_service:8080/auth
    env_file:
      - .env

  nginx_service:
    container_name: nginx
    restart: always
    build: ./frontend
    healthcheck:
      test: ["CMD", "curl", "-fk", "https://localhost/index.html"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 8443:443
    networks:
      - internal
    environment:
      - AUTH_SERVICE_URL=http://auth_service:8080/auth


networks:
  internal:
    driver: bridge

volumes:
  auth_db:
    driver: local
    driver_opts:
      type: none
      device: ./backend/authentication/data/database
      o: bind
  user_db:
    driver: local
    driver_opts:
      type: none
      device: ./backend/userManagement/data/database
      o: bind
  user_avatars:
    driver: local
    driver_opts:
      type: none
      device: ./backend/userManagement/data/avatars
      o: bind

    # Comment out to NOT have database and user uploads available on host TODO
